{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTab","find","tab","id","className","map","classNames","href","onClick","handlerTabSelect","title","content","App","useState","selected","setSelected","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAE/B,IADLC,EACI,EADJA,KAAMC,EACF,EADEA,cAAeC,EACjB,EADiBA,cAEfC,EAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAQtE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BAEIP,EAAKQ,KAAI,SAACH,GAAD,OACP,oBACEE,UAAWE,IAAW,CACpB,YAAaN,EAAWG,KAAOD,EAAIC,KAErC,UAAQ,MAJV,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,YAtBA,SAACN,GACpBJ,IAAkBI,EAAIC,IACxBJ,EAAcG,GAqBAO,CAAiBP,IAJrB,SAOGA,EAAIQ,SATFR,EAAIC,WAiBnB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,UAEc,OAAVJ,QAAU,IAAVA,OAAA,EAAAA,EAAYW,UAAW,mBC7CpBd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAgCC,mBAAShB,EAAK,IAA9C,mBAAOiB,EAAP,KAAiBC,EAAjB,KAEA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,EAASJ,SAE/B,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAegB,EAASX,GACxBJ,cAAegB,QCpBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.53346d2c.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs, selectedTabId, onTabSelected,\n}) => {\n  const currentTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handlerTabSelect = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map((tab) => (\n              <li\n                className={classNames({\n                  'is-active': currentTab.id === tab.id,\n                })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    handlerTabSelect(tab);\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {\n          currentTab?.content || 'No content'\n        }\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selected, setSelected] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selected.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selected.id}\n        onTabSelected={setSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}